function vivify(e,t){if(e.code){if(!(e.code in games))return t.emit("bad_code");e.game=games[e.code]}return e.game&&e.name,e}Game.prototype.addPlayer=function(e,t){var i=new Player(e,this);i.socket=t,this.players.push(i);var n=this.serialize();return this.emit("player_joined",{game:n,name:i.name}),this.log("new player: "+e),i},Game.prototype.populate=function(){this.addMine(new Mine({game:this,coords:xy(400,500),words:[{text:"a drifting space station",size:12,glitchLevel:0,distance:150},{text:"it's a huge wreck",size:16,glitchLevel:2,distance:0}]})),this.addMine(new Mine({game:this,coords:xy(550,250),words:[{text:"a shining speck of light",size:12,glitchLevel:0,distance:120},{text:"noise and chaos",size:18,glitchLevel:3,distance:80},{text:"EXPLOSION",size:36,glitchLevel:5,distance:0}]}))},Game.prototype.addMine=function(e){this.mines.push(e)},Game.prototype.emit=function(){var e=arguments;this.players.forEach(function(t){t.socket.emit.apply(t.socket,e)})},Game.prototype.getRoom=function(){return"game_"+this.code},Game.prototype.start=function(){},Game.prototype.win=function(){},Game.prototype.lose=function(){};var getGame=_.propFinder(games,"code"),games={};module.exports=function(e){console.log(e.id+" > connect"),setupSocket(e),e.bind("disconnect",function(){}),e.bind("error",function(e,t){console.log("error data:",e,t)}),e.bind("new_game",function(t){t=vivify(t,e);var i=new Game;games[i.code]=i,i.populate(),i.addPlayer(t.name,e)}),e.bind("join_game",function(t){t=vivify(t,e),t.game&&t.game.addPlayer(t.name,e)})},Mine.prototype.increment=function(){this.stage+=1};
